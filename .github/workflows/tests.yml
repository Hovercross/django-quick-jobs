name: Run tests
on:
  - pull_request

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      POETRY_VIRTUALENVS_CREATE: false
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Install poetry
        run: |
          python -m ensurepip
          python -m pip install --upgrade pip
          python -m pip install poetry
      
      - name: Set up dependencies
        run: python -m poetry install
      - name: Run black
        run: black --check --diff job_runner/

  pytest:
    runs-on: ubuntu-latest
    env:
      POETRY_VIRTUALENVS_CREATE: false
    strategy:
      matrix:
        python-version:
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
        django-version:
          - 2.2.*
          - 3.0.*
          - 3.1.*
          - 3.2.*
          - 4.0.*
        exclude:
          - django-version: 4.0.*
            python-version: 3.6
          - django-version: 4.0.*
            python-version: 3.7
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python version ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        run: |
          python -m ensurepip
          python -m pip install --upgrade pip
          python -m pip install poetry
      
      - name: Set up dependencies
        run: python -m poetry install
      - name: Re-install specific Django version
        run: pip install Django=="${{ matrix.django-version }}"
      - name: Run tests
        run: pytest

  execute_sample_job:
    runs-on: ubuntu-latest
    env:
      POETRY_VIRTUALENVS_CREATE: false
    strategy:
      matrix:
        python-version:
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
        django-version:
          - 2.2.*
          - 3.0.*
          - 3.1.*
          - 3.2.*
          - 4.0.*
        exclude:
          - django-version: 4.0.*
            python-version: 3.6
          - django-version: 4.0.*
            python-version: 3.7
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python version ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        run: |
          python -m ensurepip
          python -m pip install --upgrade pip
          python -m pip install poetry
      
      - name: Set up dependencies
        run: python -m poetry install
      - name: Re-install specific Django version
        run: pip install Django=="${{ matrix.django-version }}"
      - name: Run sample job
        run: python manage.py run_jobs --stop-after=1 --include-job "job_runner.sample_jobs.sample_job_1"
  
  execute_forever_running_job:
    runs-on: ubuntu-latest
    env:
      POETRY_VIRTUALENVS_CREATE: false
    strategy:
      matrix:
        python-version:
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
        django-version:
          - 2.2.*
          - 3.0.*
          - 3.1.*
          - 3.2.*
          - 4.0.*
        exclude:
          - django-version: 4.0.*
            python-version: 3.6
          - django-version: 4.0.*
            python-version: 3.7
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python version ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        run: |
          python -m ensurepip
          python -m pip install --upgrade pip
          python -m pip install poetry
      
      - name: Set up dependencies
        run: python -m poetry install
      - name: Re-install specific Django version
        run: pip install Django=="${{ matrix.django-version }}"
      - name: Run job that expects to run forever
        run: ./test_run_forever_exit.sh