name: Test matrix
on:
  - pull_request

jobs:
  automated-tests:
    runs-on: ubuntu-latest
    env:
      POETRY_VIRTUALENVS_CREATE: false
    strategy:
      matrix:
        versions:
          # Django 2.2
          - django: "2.2.*"
            python: "3.7"
          - django: "2.2.*"
            python: "3.8"
          - django: "2.2.*"
            python: "3.9"
          # Django 3.0
          - django: "3.0.*"
            python: "3.7"
          - django: "3.0.*"
            python: "3.8"
          - django: "3.0.*"
            python: "3.9"
          # Django 3.1
          - django: "3.1.*"
            python: "3.7"
          - django: "3.1.*"
            python: "3.8"
          - django: "3.1.*"
            python: "3.9"
          # Django 3.2
          - django: "3.2.*"
            python: "3.7"
          - django: "3.2.*"
            python: "3.8"
          - django: "3.2.*"
            python: "3.9"
          - django: "3.2.*"
            python: "3.10"
          # Django 4.0
          - django: "4.0.*"
            python: "3.8"
          - django: "4.0.*"
            python: "3.9"
          - django: "4.0.*"
            python: "3.10"
          # Django 4.1
          - django: "4.1.*"
            python: "3.8"
          - django: "4.1.*"
            python: "3.9"
          - django: "4.1.*"
            python: "3.10"
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python version ${{ matrix.versions.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.versions.python }}
      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
      
      - name: Set up dependencies
        run: python -m poetry install
      - name: Re-install specific Django version
        run: pip install Django=="${{ matrix.versions.django }}"
      - name: Run automated tests
        run: pytest --timeout 600
